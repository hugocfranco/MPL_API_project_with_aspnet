// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mpl.Data;

namespace Mpl.Migrations
{
    [DbContext(typeof(StoreDataContext))]
    [Migration("20190625174722_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mpl.Models.AdvArea", b =>
                {
                    b.Property<int>("AdvogadoId");

                    b.Property<int>("AreaId");

                    b.HasKey("AdvogadoId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("AdvArea");
                });

            modelBuilder.Entity("Mpl.Models.Advogado", b =>
                {
                    b.Property<int>("AdvogadoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(21);

                    b.Property<int>("Telefone")
                        .HasColumnName("Telefone")
                        .HasColumnType("int")
                        .HasMaxLength(120);

                    b.HasKey("AdvogadoId");

                    b.ToTable("Advogado");
                });

            modelBuilder.Entity("Mpl.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("Descrição")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.HasKey("AreaId");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("Mpl.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(21);

                    b.Property<int>("Telefone")
                        .HasColumnName("Telefone")
                        .HasColumnType("int")
                        .HasMaxLength(120);

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Mpl.Models.EscArea", b =>
                {
                    b.Property<int>("EscritorioId");

                    b.Property<int>("AreaId");

                    b.HasKey("EscritorioId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("EscArea");
                });

            modelBuilder.Entity("Mpl.Models.Escritorio", b =>
                {
                    b.Property<int>("EscritorioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(21);

                    b.Property<int>("Telefone")
                        .HasColumnName("Telefone")
                        .HasColumnType("int")
                        .HasMaxLength(120);

                    b.HasKey("EscritorioId");

                    b.ToTable("Escritorio");
                });

            modelBuilder.Entity("Mpl.Models.AdvArea", b =>
                {
                    b.HasOne("Mpl.Models.Advogado", "Advogados")
                        .WithMany("AdvAreas")
                        .HasForeignKey("AdvogadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mpl.Models.Area", "Areas")
                        .WithMany("AdvAreas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mpl.Models.EscArea", b =>
                {
                    b.HasOne("Mpl.Models.Area", "Areas")
                        .WithMany("EscAreas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mpl.Models.Escritorio", "Escritorios")
                        .WithMany("EscAreas")
                        .HasForeignKey("EscritorioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
